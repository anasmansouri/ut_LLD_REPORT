<?xml version="1.0" encoding="UTF-8"?>
<testsuites tests="14" failures="0" disabled="0" errors="0" timestamp="2022-02-04T11:09:56" time="0.002" name="AllTests">
  <testsuite name="GTestClass_CtWLANBTAntennaControlSwc" tests="14" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="CtWLANBTAntennaControlSwc_Cyclic10ms_State_I" status="run" time="0" classname="GTestClass_CtWLANBTAntennaControlSwc">
<properties>
<property name="Description" value="Checking the function CtWLANBTAntennaControlSwc_Cyclic10ms when Current_State == STATE_I"/>
<property name="Test_Step_0" value="tickCounter == 0"/>
<property name="Test_Step_1" value="tickCounter != 0"/>
</properties>
    </testcase>
    <testcase name="CtWLANBTAntennaControlSwc_Cyclic10ms_State_II" status="run" time="0" classname="GTestClass_CtWLANBTAntennaControlSwc">
<properties>
<property name="Description" value="Checking the function CtWLANBTAntennaControlSwc_Cyclic10ms when Current_State == STATE_II"/>
<property name="Test_Step_0" value="WLAN_BT_1_Antenna.MovAvrFilter.hasEnoughSamples == TRUE &amp;&amp; WLAN_BT_2_Antenna.MovAvrFilter.hasEnoughSamples == FALSE"/>
<property name="Test_Step_1" value="WLAN_BT_2_Antenna.MovAvrFilter.hasEnoughSamples == TRUE &amp;&amp; WLAN_BT_1_Antenna.MovAvrFilter.hasEnoughSamples == FALSE"/>
</properties>
    </testcase>
    <testcase name="CtWLANBTAntennaControlSwc_Cyclic10ms_State_III" status="run" time="0" classname="GTestClass_CtWLANBTAntennaControlSwc">
<properties>
<property name="Description" value="Checking the function CtWLANBTAntennaControlSwc_Cyclic10ms when Current_State == STATE_III"/>
<property name="Test_Step_0" value="tickCounter==0"/>
<property name="Test_Step_1" value="tickCounter!=0"/>
</properties>
    </testcase>
    <testcase name="CtWLANBTAntennaControlSwc_Cyclic10ms_STATE_IV" status="run" time="0" classname="GTestClass_CtWLANBTAntennaControlSwc">
<properties>
<property name="Description" value="Checking the function CtWLANBTAntennaControlSwc_Cyclic10ms when Current_State == STATE_IV"/>
<property name="Test_Step_0" value="WLAN_BT_1_Antenna.MovAvrFilter.hasEnoughSamples == TRUE &amp;&amp; WLAN_BT_2_Antenna.MovAvrFilter.hasEnoughSamples == FALSE"/>
<property name="Test_Step_1" value="WLAN_BT_2_Antenna.MovAvrFilter.hasEnoughSamples == TRUE &amp;&amp; WLAN_BT_1_Antenna.MovAvrFilter.hasEnoughSamples == FALSE"/>
</properties>
    </testcase>
    <testcase name="CtWLANBTAntennaControlSwc_Cyclic10ms_default_State" status="run" time="0" classname="GTestClass_CtWLANBTAntennaControlSwc">
<properties>
<property name="Description" value="Checking the function CtWLANBTAntennaControlSwc_Cyclic10ms when Current_State == 5U"/>
</properties>
    </testcase>
    <testcase name="perform_WLAN_BT_VoltMeasure" status="run" time="0" classname="GTestClass_CtWLANBTAntennaControlSwc">
<properties>
<property name="Description" value="Checking the function perform_WLAN_BT_VoltMeasure"/>
<property name="Test_Step_0" value="WLAN_BT_Antenna-&gt;antennaNumber == WLAN_BT_ANTENNA_I and retVal == E_OK"/>
<property name="Test_Step_1" value="WLAN_BT_Antenna-&gt;antennaNumber == WLAN_BT_ANTENNA_II and retVal == E_NOT_OK"/>
<property name="Test_Step_2" value="WLAN_BT_Antenna-&gt;antennaNumber == 3u : default case"/>
</properties>
    </testcase>
    <testcase name="Check_WLAN_BT_ShortPositive" status="run" time="0" classname="GTestClass_CtWLANBTAntennaControlSwc">
<properties>
<property name="Description" value="Checking the function Check_WLAN_BT_ShortPositive"/>
<property name="Test_Step_0" value="WLAN_BT_Antenna-&gt;Voltage_EN_LOW &gt; WLAN_BT_VOLTAGE_ON_LIMIT"/>
<property name="Test_Step_1" value="WLAN_BT_Antenna-&gt;Voltage_EN_LOW &lt;= WLAN_BT_VOLTAGE_ON_LIMIT"/>
</properties>
    </testcase>
    <testcase name="Check_WLAN_BT_Diag" status="run" time="0" classname="GTestClass_CtWLANBTAntennaControlSwc">
<properties>
<property name="Description" value="Checking the function Check_WLAN_BT_Diag"/>
<property name="Test_Step_0" value="WLAN_BT_Antenna-&gt;boSkipEnableAssertedDiagnostics == FALSE &amp;&amp;  WLAN_BT_Antenna-&gt;Voltage_EN_HIGH &lt; WLAN_BT_VOLTAGE_OFF_SHORTGDN_MAX"/>
<property name="Test_Step_1" value="WLAN_BT_Antenna-&gt;boSkipEnableAssertedDiagnostics == FALSE &amp;&amp; ( WLAN_BT_Antenna-&gt;Voltage_EN_HIGH &gt;= WLAN_BT_VOLTAGE_OFF_SHORTGDN_MAX &amp;&amp; WLAN_BT_Antenna-&gt;Voltage_EN_HIGH &lt;= WLAN_BT_VOLTAGE_OFF_NORMAL_MAX)"/>
<property name="Test_Step_2" value="WLAN_BT_Antenna-&gt;boSkipEnableAssertedDiagnostics == FALSE &amp;&amp; (WLAN_BT_Antenna-&gt;Voltage_EN_HIGH &gt; WLAN_BT_VOLTAGE_OFF_NORMAL_MAX  &amp;&amp; WLAN_BT_Antenna-&gt;Voltage_EN_HIGH &lt;= WLAN_BT_VOLTAGE_MAX)"/>
<property name="Test_Step_3" value="WLAN_BT_Antenna-&gt;boSkipEnableAssertedDiagnostics == FALSE &amp;&amp; WLAN_BT_Antenna-&gt;Voltage_EN_HIGH &lt; WLAN_BT_VOLTAGE_OFF_NORMAL_MAX "/>
<property name="Test_Step_4" value="WLAN_BT_Antenna-&gt;boSkipEnableAssertedDiagnostics == FALSE &amp;&amp; WLAN_BT_Antenna-&gt;Voltage_EN_HIGH &gt; WLAN_BT_VOLTAGE_MAX "/>
<property name="Test_Step_5" value="WLAN_BT_Antenna-&gt;boSkipEnableAssertedDiagnostics == TRUE"/>
</properties>
    </testcase>
    <testcase name="CtWLANBTAntennaControlSwc_Init" status="run" time="0.001" classname="GTestClass_CtWLANBTAntennaControlSwc">
<properties>
<property name="Description" value="Checking the function CtWLANBTAntennaControlSwc_Init"/>
<property name="Test_Step_0" value="paramWLAN_BT_1_Antenna == CODING_INSTALLED "/>
<property name="Test_Step_1" value="paramWLAN_BT_2_Antenna == CODING_INSTALLED "/>
<property name="Test_Step_2" value="paramWLAN_BT_1_Antenna == CODING_NOT_INSTALLED"/>
<property name="Test_Step_3" value="paramWLAN_BT_2_Antenna == CODING_NOT_INSTALLED"/>
<property name="Test_Step_4" value="OTPMemory_HardwareVariantAtLeast returns TRUE"/>
<property name="Test_Step_5" value="OTPMemory_HardwareVariantAtLeast returns FALSE"/>
</properties>
    </testcase>
    <testcase name="DidServices_ID_MeasValue_5445_ConditionCheckRead" status="run" time="0" classname="GTestClass_CtWLANBTAntennaControlSwc">
<properties>
<property name="Description" value="Checking the function DidServices_ID_MeasValue_5445_ConditionCheckRead"/>
</properties>
    </testcase>
    <testcase name="DidServices_ID_MeasValue_5445_ReadData" status="run" time="0" classname="GTestClass_CtWLANBTAntennaControlSwc">
<properties>
<property name="Description" value="Checking the function DidServices_ID_MeasValue_5445_ReadData"/>
<property name="Test_Step_0" value="WLAN_BT_1_Antenna.antennaState = WLAN_BT_ANTENNA_STATE_OK"/>
<property name="Test_Step_1" value="WLAN_BT_1_Antenna.antennaState = WLAN_BT_ANTENNA_STATE_BROKENLINE"/>
<property name="Test_Step_2" value="WLAN_BT_1_Antenna.antennaState = WLAN_BT_ANTENNA_STATE_SHORTTOGROUND"/>
<property name="Test_Step_3" value="WLAN_BT_1_Antenna.antennaState = WLAN_BT_ANTENNA_STATE_SHORTTOPOWER"/>
<property name="Test_Step_4" value="WLAN_BT_1_Antenna.antennaState = WLAN_BT_ANTENNA_STATE_INIT"/>
<property name="Test_Step_5" value="WLAN_BT_1_Antenna.antennaState = WLAN_BT_ANTENNA_STATE_INIT"/>
<property name="Test_Step_6" value="Default Case"/>
</properties>
    </testcase>
    <testcase name="DidServices_ID_MeasValue_5446_ConditionCheckRead" status="run" time="0" classname="GTestClass_CtWLANBTAntennaControlSwc">
<properties>
<property name="Description" value="Checking the function DidServices_ID_MeasValue_5446_ConditionCheckRead"/>
</properties>
    </testcase>
    <testcase name="DidServices_ID_MeasValue_5446_ReadData" status="run" time="0" classname="GTestClass_CtWLANBTAntennaControlSwc">
<properties>
<property name="Description" value="Checking the function DidServices_ID_MeasValue_5446_ReadData"/>
<property name="Test_Step_0" value="WLAN_BT_2_Antenna.antennaState = WLAN_BT_ANTENNA_STATE_OK"/>
<property name="Test_Step_1" value="WLAN_BT_2_Antenna.antennaState = WLAN_BT_ANTENNA_STATE_BROKENLINE"/>
<property name="Test_Step_2" value="WLAN_BT_2_Antenna.antennaState = WLAN_BT_ANTENNA_STATE_SHORTTOGROUND"/>
<property name="Test_Step_3" value="WLAN_BT_2_Antenna.antennaState = WLAN_BT_ANTENNA_STATE_SHORTTOPOWER"/>
<property name="Test_Step_4" value="WLAN_BT_2_Antenna.antennaState = WLAN_BT_ANTENNA_STATE_INIT"/>
<property name="Test_Step_5" value="WLAN_BT_2_Antenna.antennaState = WLAN_BT_ANTENNA_STATE_INIT"/>
<property name="Test_Step_6" value="Default Case"/>
</properties>
    </testcase>
    <testcase name="Pi_WLANBTAntennaConnectionStatus_GetStatus" status="run" time="0" classname="GTestClass_CtWLANBTAntennaControlSwc">
<properties>
<property name="Description" value="Checking the function Pi_WLANBTAntennaConnectionStatus_GetStatus"/>
<property name="Test_Step_0" value="WLAN_BT_1_Antenna.antennaState == WLAN_BT_ANTENNA_STATE_BROKENLINE"/>
<property name="Test_Step_1" value="WLAN_BT_1_Antenna.antennaState == WLAN_BT_ANTENNA_STATE_INIT"/>
<property name="Test_Step_2" value="WLAN_BT_1_Antenna.antennaState == WLAN_BT_ANTENNA_STATE_OK"/>
<property name="Test_Step_3" value="WLAN_BT_2_Antenna.antennaState == WLAN_BT_ANTENNA_STATE_BROKENLINE"/>
<property name="Test_Step_4" value="WLAN_BT_2_Antenna.antennaState == WLAN_BT_ANTENNA_STATE_INIT"/>
<property name="Test_Step_5" value="WLAN_BT_2_Antenna.antennaState == WLAN_BT_ANTENNA_STATE_OK"/>
</properties>
    </testcase>
  </testsuite>
</testsuites>
